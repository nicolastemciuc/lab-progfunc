max = \x -> \y -> if x > y then x else y

maximum = \xs -> case xs of
           	[] -> 0;
       		(x : xs) -> case xs of
                    	[] -> x;
            			(y : ys) -> max x (maximum xs)


mapF = \xs -> case xs of
        		[] -> [];
       			(x : xs) -> f x : mapF xs

take = \n -> \xs -> case xs of
                    [] -> [];
             		(x : xs) -> (\r -> if n > 0 then x: r else  r)
                         		(take (n - 1) xs)


reverse = \xs -> case xs of
                	[] -> [];
           			(x : xss) -> append (reverse xss) (x : [])
           
           